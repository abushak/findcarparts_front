# # Install dependencies only when needed
FROM node:16.7.0-alpine

WORKDIR /usr/src/app
#COPY package.json generate-manifest.js generate-sitemap.js pnpm-lock.yaml ./
COPY package.json package-lock.json ./
RUN npm install

COPY . .    

RUN npm run build
# # Rebuild the source code only when needed
# FROM node:16.7.0-alpine AS builder
# WORKDIR /usr/src/app
# COPY . .
# COPY --from=deps /usr/src/app/node_modules ./node_modules
# RUN npm run build

# Production image, copy all the files and run next


# COPY --from=builder /usr/src/app/*.cjs ./
# COPY --from=builder /usr/src/app/*.config.js ./
# COPY --from=builder /usr/src/app/static ./static
# # COPY --from=builder --chown=sveltekit:nodejs /app/.svelte-kit ./.svelte-kit
# # COPY --from=builder --chown=client:nodejs /usr/src/app/build ./build
# COPY --from=builder /usr/src/app/node_modules ./node_modules
# COPY --from=builder /usr/src/app/package.json ./package.json


USER 10000

EXPOSE 3000
EXPOSE 24678

# RUN npm run preview
# Base on offical NGINX Alpine image
FROM nginx:latest

# Remove any existing config files
RUN rm /etc/nginx/conf.d/*

# Copy config files
# *.conf files in conf.d/ dir get included in main config
COPY ./nginx/prod/default.conf /etc/nginx/conf.d/

# Expose the listening port
EXPOSE 4001

# Launch NGINX
CMD [ "nginx", "-g", "daemon off;" ]
#CMD ["node", "preview"]